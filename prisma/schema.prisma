// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model user_table {
  id              String          @id @default(cuid())
  full_name       String
  clerk_id        String
  ai_id           String
  createdAt       DateTime        @default(now())
  current_session Int
  session_count   Int
  sub_type        String
  sessions        session_table[]  
  ai              ai_table        @relation(fields: [id], references: [id])
}

model session_table {
  id               String     @id @default(cuid())
  user_id          String
  overall_score    Float
  tone_score       Float
  knowledge_score  Float
  overall_desc     String
  tone_desc        String
  knowledge_desc   String
  audio_transcript String
  user             user_table @relation(fields: [user_id], references: [id])
  createdAt        DateTime   @default(now())
}

model ai_table {
  id         String       @id @default(cuid())
  ai_name    String
  vapi_id    String       @unique
  user_table user_table[]
  ai_prompt  ai_prompt[]
}

model ai_prompt {
  id         String @id @default(cuid())
  prompt     String
  prompt_desc String
  ai         ai_table @relation(fields: [id], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
